<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="ru-RU">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <title>ch007.xhtml</title>
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  </style>
  <link rel="stylesheet" type="text/css" href="../styles/stylesheet1.css" />
</head>
<body epub:type="bodymatter">
<section id="итоговый-раздел" class="level1" data-number="7">
<h1 data-number="7">7. Итоговый раздел</h1>
<div class="text-container text-container--module">
<p>В заключительной части курса мы подведём итоги и подскажем, куда можно развиваться далее. А ещё проверим, чему вы научились :)</p>
</div>
<section id="итоги-курса" class="level2" data-number="7.1">
<h2 data-number="7.1">7.1. Итоги курса</h2>
<div class="text-container text-container--module">
<p>Давайте подведём некоторые итоги этого курса по линейным CSS-анимациям.</p>
<p>За время прохождения курса мы познакомились с основами анимаций. И начали с простых микровзаимодействий при наведении или нажатии на элементы с помощью CSS-свойства <strong>transition</strong> для создания разных эффектов.</p>
<figure>
<img src="../media/file94.gif" alt="Пример наведения на кнопки" />
<figcaption aria-hidden="true">Пример наведения на кнопки</figcaption>
</figure>
<p>Познакомились с <strong>принципами анимации</strong> и за время курса учились применять их на практике.</p>
<p>Во второй главе узнали про различные <strong>временные функции</strong> и научились делать более интересные анимации с дочерними элементами и псевдоэлементами. Познакомились со свойствами <strong>transform</strong> и <strong>clip-path</strong> и пробовали их применять для анимаций кнопок, ссылок и карточек товаров.</p>
<figure>
<img src="../media/file60.gif" alt="Пример карточки товара" />
<figcaption aria-hidden="true">Пример карточки товара</figcaption>
</figure>
<p>Узнали о самых распространённых ошибках при создании простых анимаций. Учились не создавать эффект «дребезга» и не забывать про вложенные элементы, применяя не только <strong>: hover</strong>, но и <strong>: focus</strong> или <strong>: focus-within</strong>.</p>
<p>В третьем модуле мы познакомились с группой свойств <strong>animation</strong> и правилом __<span class="citation" data-cites="keyframes__">@keyframes__</span> для создания зацикленных или многошаговых анимаций. Научились различать их от переходов и применять как для небольших, так и для более сложных анимаций на примере первого экрана сайта.</p>
<p>В четвёртом модуле нас ждала насыщенная работа: мы включали анимации по клику и прокрутке страницы. В нём мы более подробно познакомились с <strong>событиями анимации</strong> на примере <strong>animationend</strong>. Сделали интересные анимации появления модального окна и всплывающих подсказок.</p>
<p>Много работали с JavaScript, описывали логику работы <strong>слайдеров</strong> и создавали для них разные анимации при переключении слайдов. Разобрали работу типичных элементов <strong>аккордеона</strong> и <strong>табов</strong> и, конечно же, научились их анимировать.</p>
<p>Досконально разобрали <strong>событие прокрутки</strong> и какие анимации можно добавлять при прокрутке страниц. Причём не только вертикальном, но и горизонтальном за счёт события <strong>wheel</strong>.</p>
<p>И все эти знания применили для оживления нескольких страниц проекта: поработали с фиксированной шапкой и шапкой при обратной прокрутке, научились делать шкалы прогресса. Научились анимированно показывать и скрывать элементы.</p>
<p>В модуле пять познакомились с <strong>параллакс-эффектом</strong> и способами его создания: от классического за счёт одного JS до работы с трёхмерными трансформациями. Много нового узнали о <strong>3D-свойствах в CSS</strong>, научились их использовать как для простых анимаций поворота кнопок или карточек, так и для целых экранов сайта. В этом нам помогали методы движения мыши, в том числе <strong>mousemove</strong>.</p>
<p>В шестом модуле мы разобрались с тем, какие инструменты могут помочь в работе над анимациями. Узнали, какие способы есть для оптимизации производительности линейных анимаций, что мы создавали на курсе.</p>
<p>Узнали о том, что JavaScript умеет отрисовывать кадры анимации. Но это уже совсем другая история…</p>
<p>Готовы ли вы и дальше расти в анимации и учиться анимировать не только CSS-свойства, но и SVG-элементы? Создавать покадровую анимацию на чистом JS или с помощью различных библиотек? Или создавать сложные рисунки и взаимодействия с помощью Canvas? А может, даже создавать виртуальные миры с помощью WebGL?</p>
<p>Если да, то уже сейчас у вас есть хороший старт для изучения этих технологий. А чтобы проверить, какие знания этого курса можно ещё подтянуть, пройдите итоговый тест.</p>
</div>
</section>
<section id="итоговый-тест" class="level2" data-number="7.2">
<h2 data-number="7.2">7.2. Итоговый тест</h2>
<div class="text-container text-container--module">
<ol type="1">
<li><strong>Какой формат графики появился первым?</strong></li>
</ol>
<ul>
<li>GIF.</li>
<li>SVG.</li>
<li>Canvas.</li>
</ul>
<ol start="2" type="1">
<li><strong>Что такое fps?</strong></li>
</ol>
<ul>
<li>Время выполнения анимации.</li>
<li>Количество кадров в секунду.</li>
<li>Количество анимируемых CSS-свойств объекта.</li>
</ul>
<ol start="3" type="1">
<li><strong>Какое свойство позволяет настроить CSS-переход?</strong></li>
</ol>
<ul>
<li>transition.</li>
<li>transform.</li>
<li>opacity.</li>
</ul>
<ol start="4" type="1">
<li><strong>За что отвечает значение 0.1s в правиле</strong></li>
</ol>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.btn</span> {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">transition</span>: opacity <span class="dv">0.4</span><span class="dt">s</span> <span class="dv">ease</span> <span class="dv">0.1</span><span class="dt">s</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<ul>
<li>За длительность анимации.</li>
<li>За скорость анимации.</li>
<li>За задержку анимации.</li>
</ul>
<ol start="5" type="1">
<li><strong>Сколько времени будет длиться анимация при наведении на элемент?</strong></li>
</ol>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.box</span> { <span class="kw">transition</span>: background-color <span class="dv">1</span><span class="dt">s</span> <span class="dv">ease</span> <span class="dv">0.2</span><span class="dt">s</span><span class="op">;</span> }</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="fu">.box</span><span class="in">:hover</span> { <span class="kw">transition</span>: background-color <span class="dv">0.3</span><span class="dt">s</span> <span class="dv">ease</span><span class="op">;</span>}</span></code></pre></div>
<ul>
<li>0.1s.</li>
<li>0.2s.</li>
<li>0.3s</li>
<li>1s</li>
</ul>
<ol start="6" type="1">
<li><strong>Какое свойство лучше всего подойдёт для анимирования движения элемента слева направо?</strong></li>
</ol>
<ul>
<li>margin.</li>
<li>position.</li>
<li>padding.</li>
<li>transform.</li>
</ul>
<ol start="7" type="1">
<li><strong>Какое значение fps является эталонным для веба?</strong></li>
</ol>
<ul>
<li>24-30 fps.</li>
<li>60 fps.</li>
<li>150–200 fps.</li>
</ul>
<ol start="8" type="1">
<li><strong>Использование свойств из каких областей помогает оптимизировать отрисовку анимаций?</strong></li>
</ol>
<ul>
<li>Style.</li>
<li>Layout.</li>
<li>Paint.</li>
<li>Composite.</li>
</ul>
<ol start="9" type="1">
<li><strong>Какой псевдокласс помогает улучшить доступность и определить стиль элемента, когда вложенный в него элемент получает фокус?</strong></li>
</ol>
<ul>
<li>hover.</li>
<li>focus-in.</li>
<li>focus-within.</li>
<li>target.</li>
</ul>
<ol start="10" type="1">
<li><strong>CSS-свойство animation позволяет создавать анимации, которые</strong></li>
</ol>
<ul>
<li>Запускаются при наведении на элемент.</li>
<li>Запускаются вне зависимости от действий пользователя.</li>
<li>Запускаются при клике на элемент.</li>
<li>Используют ключевые кадры.</li>
<li>Проще анимаций переходов.</li>
</ul>
<ol start="11" type="1">
<li><strong>Какое @-правило позволяет задать ключевые кадры анимации?</strong></li>
</ol>
<ul>
<li>supports.</li>
<li>keyframe.</li>
<li>animate.</li>
<li>keyframes.</li>
</ul>
<ol start="12" type="1">
<li><strong>Какое свойство позволяет зациклить анимацию?</strong></li>
</ol>
<ul>
<li>animation-direction.</li>
<li>animation-iteration-count.</li>
<li>animation-fill-mode.</li>
</ul>
<ol start="13" type="1">
<li><strong>Какое событие помогает выполнить какие-то действия после того, как анимация перехода была проиграна до конца?</strong></li>
</ol>
<ul>
<li>transitionstart.</li>
<li>transitionrun.</li>
<li>transitioncancel.</li>
<li>transitionend.</li>
</ul>
<ol start="14" type="1">
<li><strong>Как узнать высоту области просмотра окна браузера?</strong></li>
</ol>
<ul>
<li>document.documentElement.clientHeight.</li>
<li>document.documentElement.scrollHeight.</li>
<li>document.documentElement.offsetHeight.</li>
</ul>
<ol start="15" type="1">
<li><strong>Для страницы с большой публикацией какое значение будет больше?</strong></li>
</ol>
<ul>
<li>document.documentElement.clientHeight.</li>
<li>document.documentElement.scrollHeight.</li>
</ul>
<ol start="16" type="1">
<li><strong>Какое событие помогает обработать прокрутку колесом мыши, когда в браузере нет полос прокрутки?</strong></li>
</ol>
<ul>
<li>scroll.</li>
<li>wheel.</li>
</ul>
<ol start="17" type="1">
<li><strong>Какое событие происходит, когда курсор движется внутри элемента или его дочерних элементов?</strong></li>
</ol>
<ul>
<li>mouseover.</li>
<li>mousemove.</li>
<li>mouseleave</li>
</ul>
<ol start="18" type="1">
<li><strong>Какое свойство необходимо обязательно указать для работы с трёхмерными трансформациями?</strong></li>
</ol>
<ul>
<li>transform-style со значением flat.</li>
<li>transform со значением translateZ(1px).</li>
<li>transform-style со значением preserve-3d.</li>
</ul>
<ol start="19" type="1">
<li><strong>Какой трансформации не существует в трёхмерном пространстве?</strong></li>
</ol>
<ul>
<li>scaleZ ().</li>
<li>rotateZ ().</li>
<li>skewZ().</li>
</ul>
<ol start="20" type="1">
<li><strong>Какой верный коэффициент масштабирования нужно задать для элемента, который был сдвинут по оси Z назад на 50px при значении перспективы 100px, чтобы его размер визуально не изменился?</strong></li>
</ol>
<ul>
<li>0.5.</li>
<li><ol type="1">
<li></li>
</ol></li>
<li>1.5.</li>
<li>2.</li>
</ul>
</div>
</section>
<section id="итоговый-тест-ответы" class="level2" data-number="7.3">
<h2 data-number="7.3">7.2. Итоговый тест (Ответы)</h2>
<div class="text-container text-container--module">
<ol type="1">
<li><strong>Какой формат графики появился первым?</strong></li>
</ol>
<ul>
<li>GIF.</li>
</ul>
<ol start="2" type="1">
<li><strong>Что такое fps?</strong></li>
</ol>
<ul>
<li>Количество кадров в секунду.</li>
</ul>
<ol start="3" type="1">
<li><strong>Какое свойство позволяет настроить CSS-переход?</strong></li>
</ol>
<ul>
<li>transition.</li>
</ul>
<ol start="4" type="1">
<li><strong>За что отвечает значение 0.1s в правиле</strong></li>
</ol>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.btn</span> {</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">transition</span>: opacity <span class="dv">0.4</span><span class="dt">s</span> <span class="dv">ease</span> <span class="dv">0.1</span><span class="dt">s</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<ul>
<li>За задержку анимации.</li>
</ul>
<ol start="5" type="1">
<li><strong>Сколько времени будет длиться анимация при наведении на элемент?</strong></li>
</ol>
<div class="sourceCode" id="cb4"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.box</span> { <span class="kw">transition</span>: background-color <span class="dv">1</span><span class="dt">s</span> <span class="dv">ease</span> <span class="dv">0.2</span><span class="dt">s</span><span class="op">;</span> }</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="fu">.box</span><span class="in">:hover</span> { <span class="kw">transition</span>: background-color <span class="dv">0.3</span><span class="dt">s</span> <span class="dv">ease</span><span class="op">;</span>}</span></code></pre></div>
<ul>
<li>0.3s</li>
</ul>
<ol start="6" type="1">
<li><strong>Какое свойство лучше всего подойдёт для анимирования движения элемента слева направо?</strong></li>
</ol>
<ul>
<li>transform.</li>
</ul>
<ol start="7" type="1">
<li><strong>Какое значение fps является эталонным для веба?</strong></li>
</ol>
<ul>
<li>60 fps.</li>
</ul>
<ol start="8" type="1">
<li><strong>Использование свойств из каких областей помогает оптимизировать отрисовку анимаций?</strong></li>
</ol>
<ul>
<li>Paint.</li>
<li>Composite.</li>
</ul>
<ol start="9" type="1">
<li><strong>Какой псевдокласс помогает улучшить доступность и определить стиль элемента, когда вложенный в него элемент получает фокус?</strong></li>
</ol>
<ul>
<li>focus-within.</li>
</ul>
<ol start="10" type="1">
<li><strong>CSS-свойство animation позволяет создавать анимации, которые</strong></li>
</ol>
<ul>
<li>Запускаются при наведении на элемент.</li>
<li>Запускаются вне зависимости от действий пользователя.</li>
<li>Используют ключевые кадры.</li>
</ul>
<ol start="11" type="1">
<li><strong>Какое @-правило позволяет задать ключевые кадры анимации?</strong></li>
</ol>
<ul>
<li>keyframes.</li>
</ul>
<ol start="12" type="1">
<li><strong>Какое свойство позволяет зациклить анимацию?</strong></li>
</ol>
<ul>
<li>animation-iteration-count.</li>
</ul>
<ol start="13" type="1">
<li><strong>Какое событие помогает выполнить какие-то действия после того, как анимация перехода была проиграна до конца?</strong></li>
</ol>
<ul>
<li>transitionend.</li>
</ul>
<ol start="14" type="1">
<li><strong>Как узнать высоту области просмотра окна браузера?</strong></li>
</ol>
<ul>
<li>document.documentElement.clientHeight.</li>
</ul>
<ol start="15" type="1">
<li><strong>Для страницы с большой публикацией какое значение будет больше?</strong></li>
</ol>
<ul>
<li>document.documentElement.scrollHeight.</li>
</ul>
<ol start="16" type="1">
<li><strong>Какое событие помогает обработать прокрутку колесом мыши, когда в браузере нет полос прокрутки?</strong></li>
</ol>
<ul>
<li>wheel.</li>
</ul>
<ol start="17" type="1">
<li><strong>Какое событие происходит, когда курсор движется внутри элемента или его дочерних элементов?</strong></li>
</ol>
<ul>
<li>mousemove.</li>
</ul>
<ol start="18" type="1">
<li><strong>Какое свойство необходимо обязательно указать для работы с трёхмерными трансформациями?</strong></li>
</ol>
<ul>
<li>transform-style со значением preserve-3d.</li>
</ul>
<ol start="19" type="1">
<li><strong>Какой трансформации не существует в трёхмерном пространстве?</strong></li>
</ol>
<ul>
<li>skewZ().</li>
</ul>
<ol start="20" type="1">
<li><strong>Какой верный коэффициент масштабирования нужно задать для элемента, который был сдвинут по оси Z назад на 50px при значении перспективы 100px, чтобы его размер визуально не изменился?</strong></li>
</ol>
<ul>
<li>1.5.</li>
</ul>
</div>
</section>
<section id="библиотека-animate.css" class="level2" data-number="7.4">
<h2 data-number="7.4">7.3. <a href="https://animate.style/">Библиотека Animate.css</a></h2>
</section>
<section id="библиотека-cssanimation.io" class="level2" data-number="7.5">
<h2 data-number="7.5">7.4. <a href="https://cssanimation.io/index.html">Библиотека cssanimation.io</a></h2>
</section>
<section id="библиотека-animista" class="level2" data-number="7.6">
<h2 data-number="7.6">7.5. <a href="https://animista.net/">Библиотека Animista</a></h2>
</section>
</section>
</body>
</html>
